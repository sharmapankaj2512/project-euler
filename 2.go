package main

import "fmt"

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

type FibonacciGenerator func() int

func MakeFibonacciGenerator() FibonacciGenerator {
	n2 := 0
	n1 := 1
	f := next
	return func() int {
		n1, n2 = f(n2, n1)
		return n2
	}
}

func next(n2 int, n1 int) (int, int) {
	return n1 + n2, n1
}

func main() {
	sum := 0
	limit := 4000000
	generator := MakeFibonacciGenerator()
	for i := generator(); i < limit; i = generator() {
		if i % 2 == 0 {
			sum += i
		}
	}
	fmt.Println(sum)
}
